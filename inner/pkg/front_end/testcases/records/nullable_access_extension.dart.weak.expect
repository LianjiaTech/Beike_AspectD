library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/records/nullable_access_extension.dart:13:14: Warning: Operand of null-aware operation '?.' has type '(int, {String a})' which excludes null.
//     var l6 = r?.$1; // Warning.
//              ^
//
// pkg/front_end/testcases/records/nullable_access_extension.dart:14:14: Warning: Operand of null-aware operation '?.' has type '(int, {String a})' which excludes null.
//     var l7 = r?.a; // Warning.
//              ^
//
import self as self;
import "dart:core" as core;

extension /* unnamed */ _extension#0 on (core::int, {required a: core::String})? {
  get $1 = self::_extension#0|get#$1;
  get a = self::_extension#0|get#a;
}
static method method((core::int, {required a: core::String})? r) → dynamic {
  core::int l0 = self::_extension#0|get#$1(r);
  core::String l1 = self::_extension#0|get#a(r);
  core::int? l2 = let final(core::int, {required a: core::String})? #t1 = r in #t1 == null ?{core::int?} null : #t1{(core::int, {required a: core::String})}.$1{core::int};
  core::String? l3 = let final(core::int, {required a: core::String})? #t2 = r in #t2 == null ?{core::String?} null : #t2{(core::int, {required a: core::String})}.a{core::String};
  if(!(r == null)) {
    core::int l4 = r{(core::int, {required a: core::String})}.$1{core::int};
    core::String l5 = r{(core::int, {required a: core::String})}.a{core::String};
    core::int? l6 = let final(core::int, {required a: core::String}) #t3 = r{(core::int, {required a: core::String})} in #t3 == null ?{core::int?} null : #t3.$1{core::int};
    core::String? l7 = let final(core::int, {required a: core::String}) #t4 = r{(core::int, {required a: core::String})} in #t4 == null ?{core::String?} null : #t4.a{core::String};
  }
}
static method _extension#0|get#$1(lowered final(core::int, {required a: core::String})? #this) → core::int
  return 0;
static method _extension#0|get#a(lowered final(core::int, {required a: core::String})? #this) → core::String
  return "";
