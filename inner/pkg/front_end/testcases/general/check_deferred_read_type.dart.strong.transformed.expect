library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

import "org-dartlang-testcase:///deferred_lib.dart" deferred as lib;

static method main() → dynamic {}
static method test() → dynamic {
  core::print(let final core::Object* #t1 = CheckLibraryIsLoaded(lib) in #C1);
}

library /*isNonNullableByDefault*/;
import self as self2;
import "dart:core" as core;

class C extends core::Object {
  static field core::int y = 1;
  synthetic constructor •() → self2::C
    : super core::Object::•()
    ;
  static method m() → core::int
    return 2;
}
static field core::int x = 0;
static method m(dynamic x) → dynamic
  return null;

constants  {
  #C1 = TypeLiteralConstant(self2::C)
}
