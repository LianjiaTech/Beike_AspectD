library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/general/issue49206.dart:7:13: Error: Type variables can't be used as constants.
// fn1<T>() => const <A<T>>[];
//             ^
//
// pkg/front_end/testcases/general/issue49206.dart:8:13: Error: Type variables can't be used as constants.
// fn2<T>() => const <A<T>>{};
//             ^
//
// pkg/front_end/testcases/general/issue49206.dart:9:13: Error: Type variables can't be used as constants.
// fn3<T>() => const <A<T>, String>{};
//             ^
//
// pkg/front_end/testcases/general/issue49206.dart:10:13: Error: Type variables can't be used as constants.
// fn4<T>() => const <int, A<T>>{};
//             ^
//
// pkg/front_end/testcases/general/issue49206.dart:11:13: Error: Type variables can't be used as constants.
// fn5<T>() => const <A<T>, A<T>>{};
//             ^
//
import self as self;
import "dart:core" as core;

class A<T extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::A<self::A::T%>
    : super core::Object::•()
    ;
}
static method fn1<T extends core::Object? = dynamic>() → dynamic
  return invalid-expression "Type variables can't be used as constants.";
static method fn2<T extends core::Object? = dynamic>() → dynamic
  return invalid-expression "Type variables can't be used as constants.";
static method fn3<T extends core::Object? = dynamic>() → dynamic
  return invalid-expression "Type variables can't be used as constants.";
static method fn4<T extends core::Object? = dynamic>() → dynamic
  return invalid-expression "Type variables can't be used as constants.";
static method fn5<T extends core::Object? = dynamic>() → dynamic
  return invalid-expression "Type variables can't be used as constants.";
static method main() → dynamic {}
