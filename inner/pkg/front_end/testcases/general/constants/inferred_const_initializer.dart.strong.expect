library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/general/constants/inferred_const_initializer.dart:8:28: Error: Constant expression expected.
// Try inserting 'const'.
//   const Class1() : field = []; // Error
//                            ^
//
// pkg/front_end/testcases/general/constants/inferred_const_initializer.dart:20:28: Error: Constant expression expected.
// Try inserting 'const'.
//   const Class3() : field = Class2(); // Error
//                            ^^^^^^
//
import self as self;
import "dart:core" as core;

class Class1 extends core::Object /*hasConstConstructor*/  {
  final field dynamic field;
  const constructor •() → self::Class1
    : self::Class1::field = <dynamic>[], super core::Object::•()
    ;
}
class Class2 extends core::Object /*hasConstConstructor*/  {
  final field dynamic field;
  const constructor •() → self::Class2
    : self::Class2::field = #C1, super core::Object::•()
    ;
}
class Class3 extends core::Object /*hasConstConstructor*/  {
  final field dynamic field;
  const constructor •() → self::Class3
    : self::Class3::field = #C2, super core::Object::•()
    ;
}
class Class4 extends core::Object /*hasConstConstructor*/  {
  final field dynamic field;
  const constructor •() → self::Class4
    : self::Class4::field = #C2, super core::Object::•()
    ;
}

constants  {
  #C1 = <dynamic>[]
  #C2 = self::Class2 {field:#C1}
}


Constructor coverage from constants:
org-dartlang-testcase:///inferred_const_initializer.dart:
- Class2. (from org-dartlang-testcase:///inferred_const_initializer.dart:14:9)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart)
