library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/general/records_opt_out.dart:7:1: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// (int, String) method1(int a, String b) => (a, b);
// ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:8:14: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// int method2([(int, String) record = const (0, '')]) => record.$1;
//              ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:9:17: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// String method3([(int, String) record = const (0, '')]) => record.$2;
//                 ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:10:1: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// ({int a, String b}) method4(int a, String b) => (a: a, b: b);
// ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:11:14: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// int method5([({int a, String b}) record = const (a: 0, b: '')]) => record.a;
//              ^
//
// pkg/front_end/testcases/general/records_opt_out.dart:12:17: Error: This requires the experimental 'records' language feature to be enabled.
// Try passing the '--enable-experiment=records' command line option.
// String method6([({int a, String b}) record = const (a: 0, b: '')]) => record.b;
//                 ^
//
import self as self;
import "dart:core" as core;

static method method1(core::int a, core::String b) → invalid-type
  ;
static method method2([has-declared-initializer invalid-type record]) → core::int
  ;
static method method3([has-declared-initializer invalid-type record]) → core::String
  ;
static method method4(core::int a, core::String b) → invalid-type
  ;
static method method5([has-declared-initializer invalid-type record]) → core::int
  ;
static method method6([has-declared-initializer invalid-type record]) → core::String
  ;
