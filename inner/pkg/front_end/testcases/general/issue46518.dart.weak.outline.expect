library;
import self as self;
import "dart:core" as core;
import "issue46518_lib.dart" as iss;
import "dart:async" as asy;

import "org-dartlang-testcase:///issue46518_lib.dart";

class CheckIdentical extends core::Object /*hasConstConstructor*/  {
  const constructor •(dynamic x, dynamic y) → self::CheckIdentical*
    : assert(core::identical(x, y)), super core::Object::•()
    ;
  abstract member-signature method noSuchMethod(core::Invocation* invocation) → dynamic; -> core::Object::noSuchMethod
  abstract member-signature get _identityHashCode() → core::int*; -> core::Object::_identityHashCode
  abstract member-signature method _instanceOf(dynamic instantiatorTypeArguments, dynamic functionTypeArguments, dynamic type) → core::bool*; -> core::Object::_instanceOf
  abstract member-signature method _simpleInstanceOf(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOf
  abstract member-signature method _simpleInstanceOfTrue(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfTrue
  abstract member-signature method _simpleInstanceOfFalse(dynamic type) → core::bool*; -> core::Object::_simpleInstanceOfFalse
  abstract member-signature operator ==(dynamic other) → core::bool*; -> core::Object::==
  abstract member-signature get hashCode() → core::int*; -> core::Object::hashCode
  abstract member-signature method toString() → core::String*; -> core::Object::toString
  abstract member-signature get runtimeType() → core::Type*; -> core::Object::runtimeType
}
static const field iss::OT<() →* asy::Future<core::int*>*>* optedOutToken = const iss::OT::•<() →* asy::Future<core::int?>>();
static const field self::CheckIdentical* testCrossLibraries = const self::CheckIdentical::•(iss::optedInToken, self::optedOutToken);
static method testOptedOut() → dynamic
  ;
static method main() → dynamic
  ;

library /*isNonNullableByDefault*/;
import self as iss;
import "dart:async" as asy;
import "dart:core" as core;

import "org-dartlang-testcase:///issue46518.dart";

typedef NullableIntF = () → asy::Future<core::int?>;
class OT<T extends core::Object> extends core::Object /*hasConstConstructor*/  {
  const constructor •() → iss::OT<iss::OT::T>
    : super core::Object::•()
    ;
  @core::override
  method toString() → core::String
    ;
}
static const field iss::OT<() → asy::Future<core::int?>> optedInToken = const iss::OT::•<() → asy::Future<core::int?>>();
static method testOptedIn() → dynamic
  ;


Extra constant evaluation status:
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///issue46518.dart:8:23 -> InstanceConstant(const OT<Future<int?>* Function()*>{})
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///issue46518.dart:20:34 -> InstanceConstant(const CheckIdentical{})
Evaluated: StaticGet @ org-dartlang-testcase:///issue46518_lib.dart:12:4 -> InstanceConstant(const _Override{})
Evaluated: ConstructorInvocation @ org-dartlang-testcase:///issue46518_lib.dart:24:22 -> InstanceConstant(const OT<Future<int?>* Function()*>{})
Extra constant evaluation: evaluated: 7, effectively constant: 4
