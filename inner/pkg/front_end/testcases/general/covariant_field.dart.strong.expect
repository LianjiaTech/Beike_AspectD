library /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/general/covariant_field.dart:19:31: Error: The parameter 'value' of the method 'C.invariantField' has type 'int', which does not match the corresponding type, 'num', in the overridden method, 'A.invariantField'.
// Change to a supertype of 'num', or, for a covariant parameter, a subtype.
//   void set invariantField(int value) {} // error
//                               ^
// pkg/front_end/testcases/general/covariant_field.dart:6:7: Context: This is the overridden method ('invariantField').
//   num invariantField = 0;
//       ^
//
import self as self;
import "dart:core" as core;

class A extends core::Object {
  field core::num invariantField = 0;
  covariant-by-declaration field core::num covariantField = 0;
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
}
abstract class B extends core::Object implements self::A {
  synthetic constructor •() → self::B
    : super core::Object::•()
    ;
  abstract get invariantField() → core::num;
  abstract set invariantField(core::num value) → void;
  abstract get covariantField() → core::num;
  abstract set covariantField(covariant-by-declaration core::num value) → void;
}
abstract class C extends core::Object implements self::A {
  synthetic constructor •() → self::C
    : super core::Object::•()
    ;
  abstract get invariantField() → core::int;
  set invariantField(core::int value) → void {}
  abstract get covariantField() → core::int;
  set covariantField(covariant-by-declaration core::int value) → void {}
}
abstract class D extends core::Object implements self::A {
  synthetic constructor •() → self::D
    : super core::Object::•()
    ;
  abstract get invariantField() → core::int;
  set invariantField(covariant-by-declaration core::int value) → void {}
  abstract get covariantField() → core::int;
  set covariantField(covariant-by-declaration core::int value) → void {}
}
static method main() → dynamic {}
