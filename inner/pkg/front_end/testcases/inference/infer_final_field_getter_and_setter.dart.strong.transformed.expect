library test /*isNonNullableByDefault*/;
//
// Problems in library:
//
// pkg/front_end/testcases/inference/infer_final_field_getter_and_setter.dart:9:11: Error: The type 'int' of the getter 'A.x' is not a subtype of the type 'double' of the setter 'A.x'.
//   int get x;
//           ^
// pkg/front_end/testcases/inference/infer_final_field_getter_and_setter.dart:10:12: Context: This is the declaration of the setter 'A.x'.
//   void set x(double value) {}
//            ^
//
// pkg/front_end/testcases/inference/infer_final_field_getter_and_setter.dart:14:9: Error: The type 'int' of the field 'B.x' is not a subtype of the type 'double' of the inherited setter 'A.x'.
//   final x;
//         ^
// pkg/front_end/testcases/inference/infer_final_field_getter_and_setter.dart:10:12: Context: This is the declaration of the setter 'A.x'.
//   void set x(double value) {}
//            ^
//
import self as self;
import "dart:core" as core;

abstract class A extends core::Object {
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
  abstract get x() → core::int;
  set x(core::double value) → void {}
}
class B extends self::A {
  final field core::int x;
  constructor •(core::int x) → self::B
    : self::B::x = x, super self::A::•()
    ;
}
static method main() → dynamic {}
