library test /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class Foo extends core::Object /*hasConstConstructor*/  {
  const constructor •(dynamic l) → self::Foo
    : super core::Object::•()
    ;
}
static method test() → void {
  @#C1 dynamic y;
  @#C1
  function bar() → void {}
  function baz(@#C1 dynamic formal) → void {}
}
static method main() → dynamic {}

constants  {
  #C1 = self::Foo {}
}


Constructor coverage from constants:
org-dartlang-testcase:///downwards_inference_annotations_locals_referring_to_locals.dart:
- Foo. (from org-dartlang-testcase:///downwards_inference_annotations_locals_referring_to_locals.dart:9:9)
- Object. (from org-dartlang-sdk:///sdk/lib/core/object.dart)
