library test /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class C<T extends core::Object? = dynamic> extends core::Object {
  synthetic constructor •() → self::C<self::C::T%>
    : super core::Object::•()
    ;
  method f<covariant-by-class U extends self::C::T%>(self::C::f::U% x) → void {}
}
static method g1(dynamic d) → void {
  d{dynamic}.f<core::num>(1.5);
}
static method g2(dynamic d) → void {
  d{dynamic}.f(1.5);
}
static method test() → void {
  self::g1(new self::C::•<core::int>());
  self::g2(new self::C::•<core::int>());
}
static method main() → dynamic {}
