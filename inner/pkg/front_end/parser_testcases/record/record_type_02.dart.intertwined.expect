parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , Instance of 'VoidType', null, errors, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(errors, topLevelFunctionDeclaration)
        parseMethodTypeVar(errors)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(errors, errors, false, MemberKind.TopLevelMethod)
          parseFormalParameters(errors, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, ()
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(record1)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, {, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    parseRecordTypeField(,, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(,)
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    parseRecordTypeNamedFields(,)
                      listener: beginRecordTypeNamedFields({)
                      reportRecoverableError(}, EmptyRecordTypeNamedFieldsList)
                        listener: handleRecoverableError(EmptyRecordTypeNamedFieldsList, }, })
                      listener: endRecordTypeNamedFields(0, {)
                    ensureCloseParen(}, ()
                    listener: endRecordType((, null, 3, true)
                  listener: beginVariablesDeclaration(record1, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record1, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record1)
                      parseVariableInitializerOpt(record1)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    parseExpression(,)
                                      parsePrecedenceExpression(,, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(,, true, ConstantPatternContext.none)
                                          parsePrimary(,, expression, ConstantPatternContext.none)
                                            parseLiteralInt(,)
                                              listener: handleLiteralInt(2)
                                    ensureCloseParen(2, ()
                                    listener: endRecordLiteral((, 2, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record1)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record2)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments())
                      listener: handleType(int, null)
                      listener: handleNoName())
                      listener: endRecordTypeEntry()
                    reportRecoverableError(), RecordTypeOnePositionalFieldNoTrailingComma)
                      listener: handleRecoverableError(RecordTypeOnePositionalFieldNoTrailingComma, ), ))
                    listener: endRecordType((, null, 1, false)
                  listener: beginVariablesDeclaration(record2, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record2, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record2)
                      parseVariableInitializerOpt(record2)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    ensureCloseParen(,, ()
                                    listener: endRecordLiteral((, 1, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record2)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(2, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(}, null, null, }, Instance of 'VoidType', null, ok, false)
        listener: beginTopLevelMethod(}, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(ok, topLevelFunctionDeclaration)
        parseMethodTypeVar(ok)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(ok, ok, false, MemberKind.TopLevelMethod)
          parseFormalParameters(ok, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, ()
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclaration({, null)
                parseExpressionStatementOrDeclarationAfterModifiers({, {, null, null, null, null)
                  looksLikeLocalFunction(record1)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, {, false)
                    listener: beginRecordType(()
                    parseRecordTypeField((, identifierIsOptional: true)
                      listener: beginRecordTypeEntry()
                      parseMetadataStar(()
                        listener: beginMetadataStar(int)
                        listener: endMetadataStar(0)
                      listener: handleIdentifier(int, typeReference)
                      listener: handleNoTypeArguments(,)
                      listener: handleType(int, null)
                      listener: handleNoName(,)
                      listener: endRecordTypeEntry()
                    listener: endRecordType((, null, 1, false)
                  listener: beginVariablesDeclaration(record1, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record1, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record1)
                      parseVariableInitializerOpt(record1)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    parseExpression(()
                                      parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression((, true, ConstantPatternContext.none)
                                          parsePrimary((, expression, ConstantPatternContext.none)
                                            parseLiteralInt(()
                                              listener: handleLiteralInt(1)
                                    ensureCloseParen(,, ()
                                    listener: endRecordLiteral((, 1, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record1)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record2)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    parseRecordTypeNamedFields(()
                      listener: beginRecordTypeNamedFields({)
                      parseRecordTypeField({, identifierIsOptional: false)
                        listener: beginRecordTypeEntry()
                        parseMetadataStar({)
                          listener: beginMetadataStar(int)
                          listener: endMetadataStar(0)
                        listener: handleIdentifier(int, typeReference)
                        listener: handleNoTypeArguments(ok)
                        listener: handleType(int, null)
                        ensureIdentifier(int, recordFieldDeclaration)
                          listener: handleIdentifier(ok, recordFieldDeclaration)
                        listener: endRecordTypeEntry()
                      listener: endRecordTypeNamedFields(1, {)
                    ensureCloseParen(}, ()
                    listener: endRecordType((, null, 1, true)
                  listener: beginVariablesDeclaration(record2, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record2, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record2)
                      parseVariableInitializerOpt(record2)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    ensureIdentifier((, namedRecordFieldReference)
                                      listener: handleIdentifier(ok, namedRecordFieldReference)
                                    parseExpression(:)
                                      parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                        parseUnaryExpression(:, true, ConstantPatternContext.none)
                                          parsePrimary(:, expression, ConstantPatternContext.none)
                                            parseLiteralInt(:)
                                              listener: handleLiteralInt(1)
                                    listener: handleNamedRecordField(:)
                                    ensureCloseParen(1, ()
                                    listener: endRecordLiteral((, 1, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record2)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, ()
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclaration(;, null)
                parseExpressionStatementOrDeclarationAfterModifiers(;, ;, null, null, null, null)
                  looksLikeLocalFunction(record3)
                  listener: beginMetadataStar(()
                  listener: endMetadataStar(0)
                  parseRecordType((, ;, false)
                    listener: beginRecordType(()
                    listener: endRecordType((, null, 0, false)
                  listener: beginVariablesDeclaration(record3, null, null)
                  parseVariablesDeclarationRest(), true)
                    parseOptionallyInitializedIdentifier())
                      ensureIdentifier(), localVariableDeclaration)
                        listener: handleIdentifier(record3, localVariableDeclaration)
                      listener: beginInitializedIdentifier(record3)
                      parseVariableInitializerOpt(record3)
                        listener: beginVariableInitializer(=)
                        parseExpression(=)
                          parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                            parseUnaryExpression(=, true, ConstantPatternContext.none)
                              parsePrimary(=, expression, ConstantPatternContext.none)
                                parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                  parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                    listener: beginParenthesizedExpressionOrRecordLiteral(()
                                    ensureCloseParen((, ()
                                    listener: endRecordLiteral((, 0, null)
                        listener: endVariableInitializer(=)
                      listener: endInitializedIdentifier(record3)
                    ensureSemicolon())
                    listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(3, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(void)
  listener: endCompilationUnit(2, )
