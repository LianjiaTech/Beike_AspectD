parseUnit(void)
  skipErrorTokens(void)
  listener: beginCompilationUnit(void)
  syntheticPreviousToken(void)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(, null, null, , Instance of 'VoidType', null, foo, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(foo, topLevelFunctionDeclaration)
        parseMethodTypeVar(foo)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(foo, foo, false, MemberKind.TopLevelMethod)
          parseFormalParameters(foo, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, var)
          parseStatement({)
            parseStatementX({)
              parseExpressionStatementOrDeclarationAfterModifiers(var, {, null, var, null, null)
                looksLikeLocalFunction(r1)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                listener: handleNoType(var)
                listener: beginVariablesDeclaration(r1, null, var)
                parseVariablesDeclarationRest(var, true)
                  parseOptionallyInitializedIdentifier(var)
                    ensureIdentifier(var, localVariableDeclaration)
                      listener: handleIdentifier(r1, localVariableDeclaration)
                    listener: beginInitializedIdentifier(r1)
                    parseVariableInitializerOpt(r1)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                          parseUnaryExpression(=, true, ConstantPatternContext.none)
                            parsePrimary(=, expression, ConstantPatternContext.none)
                              parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                  listener: beginParenthesizedExpressionOrRecordLiteral(()
                                  parseExpression(()
                                    parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                      parseUnaryExpression((, true, ConstantPatternContext.none)
                                        parsePrimary((, expression, ConstantPatternContext.none)
                                          parseLiteralInt(()
                                            listener: handleLiteralInt(42)
                                  ensureCloseParen(,, ()
                                  listener: endRecordLiteral((, 1, null)
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(r1)
                  ensureSemicolon())
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, var)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(var, ;, null, var, null, null)
                looksLikeLocalFunction(r2)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                listener: handleNoType(var)
                listener: beginVariablesDeclaration(r2, null, var)
                parseVariablesDeclarationRest(var, true)
                  parseOptionallyInitializedIdentifier(var)
                    ensureIdentifier(var, localVariableDeclaration)
                      listener: handleIdentifier(r2, localVariableDeclaration)
                    listener: beginInitializedIdentifier(r2)
                    parseVariableInitializerOpt(r2)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                          parseUnaryExpression(=, true, ConstantPatternContext.none)
                            parsePrimary(=, expression, ConstantPatternContext.none)
                              parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                  listener: beginParenthesizedExpressionOrRecordLiteral(()
                                  ensureIdentifier((, namedRecordFieldReference)
                                    listener: handleIdentifier(hello, namedRecordFieldReference)
                                  parseExpression(:)
                                    parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                      parseUnaryExpression(:, true, ConstantPatternContext.none)
                                        parsePrimary(:, expression, ConstantPatternContext.none)
                                          parseLiteralInt(:)
                                            listener: handleLiteralInt(42)
                                  listener: handleNamedRecordField(:)
                                  ensureCloseParen(42, ()
                                  listener: endRecordLiteral((, 1, null)
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(r2)
                  ensureSemicolon())
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, var)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(var, ;, null, var, null, null)
                looksLikeLocalFunction(r3)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                listener: handleNoType(var)
                listener: beginVariablesDeclaration(r3, null, var)
                parseVariablesDeclarationRest(var, true)
                  parseOptionallyInitializedIdentifier(var)
                    ensureIdentifier(var, localVariableDeclaration)
                      listener: handleIdentifier(r3, localVariableDeclaration)
                    listener: beginInitializedIdentifier(r3)
                    parseVariableInitializerOpt(r3)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                          parseUnaryExpression(=, true, ConstantPatternContext.none)
                            parsePrimary(=, expression, ConstantPatternContext.none)
                              parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                  listener: beginParenthesizedExpressionOrRecordLiteral(()
                                  ensureIdentifier((, namedRecordFieldReference)
                                    listener: handleIdentifier(hello, namedRecordFieldReference)
                                  parseExpression(:)
                                    parsePrecedenceExpression(:, 1, true, ConstantPatternContext.none)
                                      parseUnaryExpression(:, true, ConstantPatternContext.none)
                                        parsePrimary(:, expression, ConstantPatternContext.none)
                                          parseLiteralInt(:)
                                            listener: handleLiteralInt(42)
                                  listener: handleNamedRecordField(:)
                                  ensureCloseParen(,, ()
                                  listener: endRecordLiteral((, 1, null)
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(r3)
                  ensureSemicolon())
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, var)
          parseStatement(;)
            parseStatementX(;)
              parseExpressionStatementOrDeclarationAfterModifiers(var, ;, null, var, null, null)
                looksLikeLocalFunction(r4)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
                listener: handleNoType(var)
                listener: beginVariablesDeclaration(r4, null, var)
                parseVariablesDeclarationRest(var, true)
                  parseOptionallyInitializedIdentifier(var)
                    ensureIdentifier(var, localVariableDeclaration)
                      listener: handleIdentifier(r4, localVariableDeclaration)
                    listener: beginInitializedIdentifier(r4)
                    parseVariableInitializerOpt(r4)
                      listener: beginVariableInitializer(=)
                      parseExpression(=)
                        parsePrecedenceExpression(=, 1, true, ConstantPatternContext.none)
                          parseUnaryExpression(=, true, ConstantPatternContext.none)
                            parsePrimary(=, expression, ConstantPatternContext.none)
                              parseParenthesizedExpressionFunctionLiteralOrRecordLiteral(=, ConstantPatternContext.none)
                                parseParenthesizedExpressionOrRecordLiteral(=, null, ConstantPatternContext.none)
                                  listener: beginParenthesizedExpressionOrRecordLiteral(()
                                  parseExpression(()
                                    parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                                      parseUnaryExpression((, true, ConstantPatternContext.none)
                                        parsePrimary((, expression, ConstantPatternContext.none)
                                          parseLiteralInt(()
                                            listener: handleLiteralInt(42)
                                  ensureCloseParen(42, ()
                                  listener: endParenthesizedExpression(()
                      listener: endVariableInitializer(=)
                    listener: endInitializedIdentifier(r4)
                  ensureSemicolon())
                  listener: endVariablesDeclaration(1, ;)
          notEofOrValue(}, })
          listener: endBlockFunctionBody(4, {, })
        listener: endTopLevelMethod(void, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(void)
  listener: endCompilationUnit(1, )
