parseUnit(f)
  skipErrorTokens(f)
  listener: beginCompilationUnit(f)
  syntheticPreviousToken(f)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(f)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(f)
      isReservedKeyword(()
      parseTopLevelMethod(, null, null, , Instance of 'NoType', null, f, false)
        listener: beginTopLevelMethod(, null, null)
        listener: handleNoType()
        ensureIdentifierPotentiallyRecovered(, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(f, topLevelFunctionDeclaration)
        parseMethodTypeVar(f)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(f, f, false, MemberKind.TopLevelMethod)
          parseFormalParameters(f, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          parseExpressionFunctionBody(=>, false)
            parseExpression(=>)
              looksLikeOuterPatternEquals(=>)
                skipOuterPattern(=>)
              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                  parsePrimary(=>, expression, ConstantPatternContext.none)
                    inPlainSync()
                    parseSwitchExpression(=>)
                      listener: beginSwitchExpression(switch)
                      ensureParenthesizedCondition(switch, allowCase: false)
                        parseExpressionInParenthesisRest((, allowCase: false)
                          parseExpression(()
                            looksLikeOuterPatternEquals(()
                              skipOuterPattern(()
                            parsePrecedenceExpression((, 1, true, ConstantPatternContext.none)
                              parseUnaryExpression((, true, ConstantPatternContext.none)
                                parsePrimary((, expression, ConstantPatternContext.none)
                                  parseParenthesizedExpressionFunctionLiteralOrRecordLiteral((, ConstantPatternContext.none)
                                    listener: handleNoTypeVariables(()
                                    parseFunctionExpression(()
                                      listener: beginFunctionExpression(()
                                      parseFormalParametersRequiredOpt((, MemberKind.Local)
                                        parseFormalParametersRest((, MemberKind.Local)
                                          listener: beginFormalParameters((, MemberKind.Local)
                                          listener: endFormalParameters(0, (, ), MemberKind.Local)
                                      parseAsyncOptBody(), true, false)
                                        parseAsyncModifierOpt())
                                          listener: handleAsyncModifier(null, null)
                                          inPlainSync()
                                        parseFunctionBody(), true, false)
                                          parseExpressionFunctionBody(=>, true)
                                            parseExpression(=>)
                                              looksLikeOuterPatternEquals(=>)
                                                skipOuterPattern(=>)
                                              parsePrecedenceExpression(=>, 1, true, ConstantPatternContext.none)
                                                parseUnaryExpression(=>, true, ConstantPatternContext.none)
                                                  parsePrimary(=>, expression, ConstantPatternContext.none)
                                                    parseLiteralInt(=>)
                                                      listener: handleLiteralInt(0)
                                            listener: handleExpressionFunctionBody(=>, null)
                                            inGenerator()
                                      listener: endFunctionExpression((, ))
                          ensureCloseParen(0, ()
                          listener: handleParenthesizedCondition((, null, null)
                      ensureBlock(), null, switch expression)
                      listener: beginSwitchExpressionBlock({)
                      listener: endSwitchExpressionBlock(0, {, })
                      listener: endSwitchExpression(switch, })
            ensureSemicolon(})
            listener: handleExpressionFunctionBody(=>, ;)
            inGenerator()
        listener: endTopLevelMethod(f, null, ;)
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(f)
  listener: endCompilationUnit(1, )
